export interface RepeaterBuffer {
    full: boolean;
    empty: boolean;
    add(value: unknown): unknown;
    remove(): unknown;
}
export declare class FixedBuffer implements RepeaterBuffer {
    private capacity;
    private arr;
    readonly empty: boolean;
    readonly full: boolean;
    constructor(capacity: number);
    add(value: unknown): void;
    remove(): unknown;
}
export declare class SlidingBuffer implements RepeaterBuffer {
    private capacity;
    private arr;
    readonly empty: boolean;
    readonly full = false;
    constructor(capacity: number);
    add(value: unknown): void;
    remove(): unknown;
}
export declare class DroppingBuffer implements RepeaterBuffer {
    private capacity;
    private arr;
    readonly empty: boolean;
    readonly full = false;
    constructor(capacity: number);
    add(value: unknown): void;
    remove(): unknown;
}
